create table posIVA (
	ident int,
	tipo character varying(50),
	constraint pk_ident primary key (ident)
);

create table unidades (
	id_unidades INT,
	fechaconsumo DATE,
	unidades INT,
	constraint pk_idunidades primary key (id_unidades)
);

create table pais (
	id_pais INT,
	nombre VARCHAR(50),
	nacionalidad VARCHAR(50),
	constraint pk_idpais primary key (id_pais)
);

create table provincia(
	nombre character varying(50),
	codigoProvincia int,
	pais int,
	constraint pk_codigoProv primary key (codigoProvincia),
	constraint fk_pais foreign key (pais) REFERENCES pais (id_pais)
);

create table localidad(
	nombre character varying(50),
	codPostal character varying(10),
	codigoLocalidad int,
	prov int,
	constraint pk_codigoLocalidad primary key (codigoLocalidad),
	constraint fk_prov foreign key (prov) REFERENCES provincia (codigoProvincia)
);

create table IDType(
	tipoDeID character varying(10),
	constraint pk_Tipo primary key (tipoDeID)
);

create table seccionconsumo (
	seccion varchar(50),
	constraint pk_seccion primary key (seccion)
);

create table tipohabitacion (
    id int,
    tipo character varying(50),
    costo double precision,
    constraint pk_id primary key (id)
);

create table itemconsumo (
	id_item INT,
	categoria VARCHAR(50),
	nombre VARCHAR(50),
	costo VARCHAR(50),
	constraint pk_iditem primary key (id_item),
	constraint fk_categoria foreign key (categoria) references seccionconsumo(seccion)
);

create table habitacion (
    numero int,
    piso int,
    tipo int,
    capacidad int,
    descuento int,
    constraint pk_habitacion primary key (numero, piso),
    constraint fk_tipo foreign key (tipo) REFERENCES tipohabitacion (id)
);

create table persona(
	idPersona int GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
	telefono character varying(25),
	email character varying(50),
	CUIT character varying(50),
	calle character varying(25),
	altura character varying(20),
	PosIVA int,
	Localidad int,
	constraint fk_PosIVA foreign key (PosIVA) REFERENCES posIVA (ident),
	constraint fk_Localidad foreign key (Localidad) REFERENCES localidad (codigoLocalidad)
);

create table pasajero(
    idPersona int,
	nombre character varying(50),
	apellido character varying(50),
	Ndoc character varying(25),
	TipoDoc character varying(10),
	Ocupacion character varying(50),
	FechaNac date,
	Nacionalidad int,
	constraint fk_idpersona foreign key (idPersona) REFERENCES persona (idPersona),
	constraint pk_idPersona primary key (idPersona),
	constraint fk_nacionalidad foreign key (Nacionalidad) REFERENCES pais (id_pais),
	constraint fk_TipoDoc foreign key (TipoDoc) REFERENCES IDtype (tipoDeID)
);

<<<<<<< HEAD
create table persona_juridica(
	idPersona int primary key,
	domicilioFiscal character varying(50),
	razonSocial character varying(50),
	constraint fk_idpersona foreign key (idPersona) REFERENCES persona (idPersona)
=======
create table personajuridica(
    idPersona int,
    RazonSocial character varying(50),
    DomicilioFiscal character varying(100),
    constraint fk_idpersona foreign key (idPersona) REFERENCES persona (idPersona)
);

create table responsabledepago(
    id_responsable int GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    idPersona int,
    RazonSocial character varying(50),
    CUITDNI character varying(50),
    NumDireccion character varying(50),
    calle character varying(50),
    telefono character varying(50),
    constraint fk_idpersona foreign key (idPersona) REFERENCES persona (idPersona)
);

create table tipohabitacion (
    id int PRIMARY KEY,
    tipo character varying(50),
    costo double precision
);

create table habitacion (
    numero int,
    piso int,
    tipo int,
    capacidad int,
    descuento int,
    constraint pk_habitacion primary key (numero, piso),
    constraint fk_tipo foreign key (tipo) REFERENCES tipohabitacion (id)
>>>>>>> d1d1b9edd8ebb29cdf56269cd6aad38f9b3aaf61
);

create table ocupacion (
    id_ocupacion int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    numero int,
    piso int,
    responsable int,
    checkin date,
    checkout date,
    constraint pk_id_ocupacion primary key (id_ocupacion),
    constraint fk_habitacion foreign key (numero, piso) REFERENCES habitacion (numero, piso),
    constraint fk_responsable foreign key (responsable) REFERENCES pasajero (idPersona)
);

<<<<<<< HEAD
create table consumoservicios (
	id_consumo INT,
	ocupacion int,
	costototal VARCHAR(50),
	constraint pk_idconsumo primary key (id_consumo),
	constraint fk_ocupacion foreign key (ocupacion) references ocupacion (id_ocupacion)
);

create table consumounidades (
	id_unidades INT,
	id_consumo INT,
	id_item INT,
	constraint fk_idunidades foreign key (id_unidades) references unidades(id_unidades),
	constraint fk_idconsumo foreign key (id_consumo) references consumoservicios(id_consumo),
	constraint fk_iditem foreign key (id_item) references itemconsumo(id_item),
	constraint pf_consumo_unidades primary key (id_unidades, id_consumo, id_item)
);

create table periodoestadia (
	id_estadia INT,
	ocupacion int,
	fechainicio DATE,
	fechafinal DATE,
	monto VARCHAR(50),
	constraint pk_idestadia primary key (id_estadia),
	constraint fk_ocupacion foreign key (ocupacion) references ocupacion (id_ocupacion)
=======
create table acompanantes (
    pasajero int,
    ocupacion int,
    constraint pk_acompanantes primary key (pasajero, ocupacion),
    constraint fk_ocupacion foreign key (ocupacion) REFERENCES ocupacion (id_ocupacion),
    constraint fk_pasajero foreign key (pasajero) REFERENCES pasajero (idPersona)
);

create table unidades (
    id_unidades int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    fecha_consumo Date,
    unidades int NOT NULL
);

create table seccion_consumo (
    id_categoria int PRIMARY KEY,
    tipo character varying(50)
);

create table item_consumo (
    id_item int PRIMARY KEY ,
    id_categoria int NOT NULL,
    nombre character varying(50),
    costo double precision,
    constraint fk_categoria foreign key (id_categoria) REFERENCES seccion_consumo (id_categoria)
);

create table periodoestadia(
    id_estadia int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    id_ocupacion int,
    fechadesde Date,
    fechahasta Date,
    media_estadia boolean NOT NULL,
    monto double precision,
    constraint fk_ocupacion foreign key (id_ocupacion) REFERENCES ocupacion (id_ocupacion)
);

create table detallefactura (
    id_detalle int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    costoTotal double precision
);

create table detalleunidades (
    id_detalle_unidades int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	id_unidades int NOT NULL,
    id_detalle int NOT NULL,
    id_item int NOT NULL,
    constraint fk_unidades foreign key (id_unidades) REFERENCES unidades (id_unidades),
    constraint fk_item foreign key (id_item) REFERENCES item_consumo (id_item),
    constraint fk_detalle foreign key (id_detalle) REFERENCES detallefactura (id_detalle)
);

create table tipodefactura (
	id_tipo_factura int PRIMARY KEY,
	tipo character varying(50)
);

create table notadecredito (
	id_nota_de_credito int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	responsable_pago character varying(100),
	fechafactura date,
	codigo_factura int,
	imp_neto double precision,
	iva double precision,
	cuit_dni character varying(50)
);

create table pago (
	id_pago int PRIMARY KEY,
	monto double precision
);

create table factura(
    id_factura int PRIMARY KEY GENERATED ALWAYS AS IDENTITY NOT NULL,
    id_estadia int,
    id_ocupacion int NOT NULL,
    id_detalle int NOT NULL,
    id_responsable int NOT NULL,
    id_tipo_factura int NOT NULL,
    id_nota_de_credito int,
    id_pago int,
    fecha Date,
    MontoTotal double precision,
    constraint fk_estadia foreign key (id_estadia) REFERENCES periodoestadia (id_estadia),
    constraint fk_ocupacion foreign key (id_ocupacion) REFERENCES ocupacion (id_ocupacion),
    constraint fk_detalle foreign key (id_detalle) REFERENCES detallefactura (id_detalle),
    constraint fk_responsable foreign key (id_responsable) REFERENCES responsabledepago (id_responsable),
    constraint fk_tipo_factura foreign key (id_tipo_factura) REFERENCES tipodefactura (id_tipo_factura),
    constraint fk_id_nota foreign key (id_nota_de_credito) REFERENCES notadecredito (id_nota_de_credito),
    constraint fk_id_pago foreign key (id_pago) REFERENCES pago (id_pago)
>>>>>>> d1d1b9edd8ebb29cdf56269cd6aad38f9b3aaf61
);

create table reserva (
    id_reserva int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    numero int,
    piso int,
    nombre character varying(50),
    apellido character varying(50),
    telefono character varying(50),
    fechadesde date,
    fechahasta date,
    constraint pk_id_reserva primary key (id_reserva),
    constraint fk_habitacion foreign key (numero, piso) REFERENCES habitacion (numero, piso)
);

create table fueradeservicio (
    id_fueradeservicio int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    desde date,
    hasta date,
    numero int,
    piso int,
    constraint pk_id_fueradeservicio primary key (id_fueradeservicio),
    constraint fk_habitacion foreign key (numero, piso) REFERENCES habitacion (numero, piso)
);

<<<<<<< HEAD
create table notadecredito (
	id_nota INT,
	ResponsablePago INT,
	FechaFactura DATE,
	ImpNeto DECIMAL(6,2),
	IVA DECIMAL(6,2),
	DNICUIT VARCHAR(10),
	constraint pk_notadecredito primary key (id_nota)
);

create table RespDePago (
	id_respDePago INT,
	id_Persona INT,
	DNICUIT VARCHAR(50),
	NumDireccion VARCHAR(50),
	Telefono VARCHAR(50),
	constraint pk_respdepago primary key (id_respDePago)
);

create table factura (
	id_factura INT,
	id_estadia INT,
	nota_credito int,
	id_respdepago INT,
	fecha DATE,
	monto_total VARCHAR(50),
	constraint pk_factura primary key (id_factura),
	constraint fk_estadia foreign key (id_estadia) references periodoestadia(id_estadia),
	constraint fk_notacredito foreign key (nota_credito) references notadecredito(id_nota),
	constraint fk_resp_pago foreign key (id_respdepago) references respdepago(id_respdepago)
);

create table pago (
	id_pago INT,
	id_factura INT,
	monto VARCHAR(50),
	constraint pk_pago primary key (id_pago),
	constraint fk_factura foreign key (id_factura) references factura(id_factura)
);

create table detallesfactura (
	id_factura INT,
	id_detalle INT,
	costototal VARCHAR(50),
	constraint pk_detallesfactura primary key (id_detalle),
	constraint fk_factura foreign key (id_factura) references factura(id_factura)
);

create table detalleunidades (
	id_unidades INT,
	id_detalle int,
	id_item int,
	constraint pk_detalleunidades primary key (id_item,id_unidades,id_detalle),
	constraint fk_item foreign key (id_item) references itemconsumo(id_item),
	constraint fk_unidades foreign key (id_unidades) references unidades(id_unidades),
	constraint fk_detalle foreign key (id_detalle) references detallesfactura(id_detalle)
);
=======
create table tipomoneda (
    id_moneda int PRIMARY KEY,
    moneda character varying(25),
    simbolo character varying(5)
);

create table efectivo (
    id_pago int PRIMARY KEY,
    cotizacion double precision,
    id_moneda int NOT NULL,
    constraint fk_pago foreign key (id_pago) REFERENCES pago (id_pago),
    constraint fk_moneda foreign key (id_moneda) REFERENCES tipomoneda (id_moneda)
);

create table tipoCheque (
    id_tipo_cheque int PRIMARY KEY,
    tipo_cheque character varying(25)
);

create table cheque (
    id_pago int PRIMARY KEY,
    num_cheque character varying(50),
    banco character varying(50),
    plaza character varying(50),
    fecha Date,
    id_tipo_cheque int NOT NULL,
    constraint fk_pago foreign key (id_pago) REFERENCES pago (id_pago),
    constraint fk_tipo_cheque foreign key (id_tipo_cheque) REFERENCES tipoCheque (id_tipo_cheque)
);

create table tarjeta (
    id_pago int PRIMARY KEY,
    numero character varying (25),
    vencimiento Date,
    nombre character varying (50),
    dni character varying (25),
    constraint fk_pago foreign key (id_pago) REFERENCES pago (id_pago)
);

create table tipodebito (
    id_tipo_debito int PRIMARY KEY,
    tipo_debito character varying(25)
);

create table tipocredito (
    id_tipo_credito int PRIMARY KEY,
    tipo_credito character varying(25)
);

create table tarjeta_de_credito (
    id_pago int PRIMARY KEY,
    cant_cuotas int NOT NULL,
    recargo int NOT NULL,
    id_tipo_credito int NOT NULL,
    constraint fk_pago foreign key (id_pago) REFERENCES pago (id_pago),
    constraint fk_tipo_credito foreign key (id_tipo_credito) REFERENCES tipocredito (id_tipo_credito)
);

create table tarjeta_de_debito (
    id_pago int PRIMARY KEY,
    id_tipo_debito int NOT NULL,
    constraint fk_pago foreign key (id_pago) REFERENCES pago (id_pago),
    constraint fk_tipo_debito foreign key (id_tipo_debito) REFERENCES tipodebito (id_tipo_debito)
);

create table consumos_ocupacion (
    costoTotal double precision,
    id_ocupacion int NOT NULL,
    id_consumo int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    constraint fk_ocupacion foreign key (id_ocupacion) REFERENCES ocupacion (id_ocupacion)
);

create table consumo_unidades (
    id_consumo_unidades int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    id_unidades int NOT NULL,
    id_consumo int NOT NULL,
    id_item int NOT NULL,
    constraint fk_unidades foreign key (id_unidades) REFERENCES unidades (id_unidades),
    constraint fk_consumo foreign key (id_consumo) REFERENCES consumos_ocupacion (id_consumo),
    constraint fk_item foreign key (id_item) REFERENCES item_consumo (id_item)
);


>>>>>>> d1d1b9edd8ebb29cdf56269cd6aad38f9b3aaf61
